services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: legal-os-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - legal-os-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: legal-os-backend
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./golden_dataset:/app/golden_dataset
      - ./backend/app:/app/app
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - PYTHONUNBUFFERED=1
    depends_on:
      qdrant:
        condition: service_healthy
    networks:
      - legal-os-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Next.js Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: legal-os-frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - legal-os-network

networks:
  legal-os-network:
    driver: bridge

volumes:
  qdrant_storage:
